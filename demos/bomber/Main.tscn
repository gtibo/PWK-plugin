[gd_scene load_steps=17 format=2]

[ext_resource path="res://demos/bomber/InGame/InGame.tscn" type="PackedScene" id=1]
[ext_resource path="res://addons/PWK/nodes/util/JoyMap.gd" type="Script" id=2]
[ext_resource path="res://demos/bomber/Manager/RuleManager.tres" type="Resource" id=3]
[ext_resource path="res://demos/bomber/Main.gd" type="Script" id=4]
[ext_resource path="res://demos/bomber/InGame.gd" type="Script" id=5]
[ext_resource path="res://demos/bomber/Menu.tscn" type="PackedScene" id=6]
[ext_resource path="res://addons/PWK/nodes/StateMachine/StateMachine.gd" type="Script" id=7]
[ext_resource path="res://demos/bomber/MenuState.gd" type="Script" id=8]

[sub_resource type="VisualShaderNodeVectorDistance" id=1]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.5, 0.5, 0 ) ]

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarSmoothStep" id=3]
default_input_values = [ 0, 0.4, 1, 0.4, 2, 0.0 ]

[sub_resource type="VisualShaderNodeScalarUniform" id=4]
uniform_name = "Progress"

[sub_resource type="VisualShader" id=5]
code = "shader_type canvas_item;
uniform float Progress;



void vertex() {
// Output:0

}

void fragment() {
// ScalarUniform:5
	float n_out5p0 = Progress;

// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// Distance:2
	vec3 n_in2p1 = vec3(0.50000, 0.50000, 0.00000);
	float n_out2p0 = distance(n_out3p0, n_in2p1);

// ScalarSmoothStep:4
	float n_out4p0 = smoothstep(n_out5p0, n_out5p0, n_out2p0);

// Output:0
	COLOR.a = n_out4p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 36, -27 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 600, 100 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 32, 138 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -220, 140 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( 295, 105 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( 20, 60 )
nodes/fragment/connections = PoolIntArray( 3, 0, 2, 0, 2, 0, 4, 2, 5, 0, 4, 0, 5, 0, 4, 1, 4, 0, 0, 1 )

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 5 )
shader_param/Progress = 0.0

[sub_resource type="Animation" id=7]
resource_name = "Open"
tracks/0/type = "value"
tracks/0/path = NodePath("ColorRect:material:shader_param/Progress")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0.2, 0.8 ),
"transitions": PoolRealArray( 1, 2 ),
"update": 0,
"values": [ 1.0, 0.0 ]
}

[sub_resource type="Animation" id=8]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("ColorRect:material:shader_param/Progress")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}

[node name="Main" type="Node2D"]
script = ExtResource( 4 )

[node name="CTRL0" type="Node" parent="."]
script = ExtResource( 2 )

[node name="CTRL1" type="Node" parent="."]
script = ExtResource( 2 )
controller_index = 1

[node name="CTRL2" type="Node" parent="."]
script = ExtResource( 2 )
type = "keyboard"
controller_index = 2

[node name="CTRL4" type="Node" parent="."]
script = ExtResource( 2 )
type = "keyboard"
controller_index = 3

[node name="StateMachine" type="Node" parent="."]
script = ExtResource( 7 )
initial_state = NodePath("Menu")

[node name="Menu" type="Node" parent="StateMachine"]
script = ExtResource( 8 )
MenuScene = ExtResource( 6 )

[node name="InGame" type="Node" parent="StateMachine"]
script = ExtResource( 5 )
InGameScene = ExtResource( 1 )
RuleManager = ExtResource( 3 )

[node name="Transition" type="CanvasLayer" parent="."]
layer = 3

[node name="ColorRect" type="ColorRect" parent="Transition"]
material = SubResource( 6 )
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0, 0, 0, 1 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="Transition"]
anims/Open = SubResource( 7 )
anims/RESET = SubResource( 8 )

[node name="SceneHolder" type="Node" parent="."]
