[gd_resource type="ShaderMaterial" load_steps=6 format=2]

[sub_resource type="Shader" id=63]
code = "shader_type spatial;
render_mode cull_disabled, unshaded;

uniform float wind_speed = 0.2;
uniform float wind_strength = 2.0;
// How big, in world space, is the noise texture
// wind will tile every wind_texture_tile_size
uniform float wind_texture_tile_size = 20.0;
uniform float wind_vertical_strength = 0.3;
uniform vec2 wind_horizontal_direction = vec2(1.0,0.5);

uniform sampler2D color_ramp : hint_black_albedo;
// we need a tiling noise here!
uniform sampler2D wind_noise : hint_black;


varying float debug_wind;

void vertex() {
	
	vec3 world_vert = (WORLD_MATRIX * vec4(VERTEX, 1.0)).xyz;

	vec2 normalized_wind_direction = normalize(wind_horizontal_direction);
	vec2 world_uv = world_vert.xz / wind_texture_tile_size + normalized_wind_direction * TIME * wind_speed;
	// we displace only the top part of the mesh
	// note that this means that the mesh needs to have UV in a way that the bottom of UV space
	// is at the top of the mesh
	float displacement_affect = ( UV.y);
	float wind_noise_intensity = (textureLod(wind_noise, world_uv , 0.0).r - 0.5);

	// We convert the direction of the wind into vertex space from world space
	// if we used it directly in vertex space, rotated blades of grass wouldn't behave properly
	vec2 vert_space_horizontal_dir = (inverse(WORLD_MATRIX) * vec4(wind_horizontal_direction, 0.0,0.0)).xy;
	vert_space_horizontal_dir = normalize(vert_space_horizontal_dir);
	
	vec3 bump_wind = vec3(
		wind_noise_intensity * vert_space_horizontal_dir.x,
		1.0 - wind_noise_intensity,
		wind_noise_intensity * vert_space_horizontal_dir.y 
	);
	normalize(bump_wind);
	bump_wind *= vec3(
		wind_strength,
		wind_vertical_strength,
		wind_strength
	);
	VERTEX += bump_wind * displacement_affect;
}

void fragment() {
	ALBEDO = texture(color_ramp, vec2(1.0 - UV.y, 0)).rgb ;
}"

[sub_resource type="Gradient" id=67]
colors = PoolColorArray( 0.458824, 0.729412, 0.427451, 1, 0.121569, 0.372549, 0.239216, 1 )

[sub_resource type="GradientTexture" id=68]
gradient = SubResource( 67 )

[sub_resource type="OpenSimplexNoise" id=65]
period = 128.0

[sub_resource type="NoiseTexture" id=66]
seamless = true
noise = SubResource( 65 )

[resource]
shader = SubResource( 63 )
shader_param/wind_speed = 0.1
shader_param/wind_strength = 0.4
shader_param/wind_texture_tile_size = 4.0
shader_param/wind_vertical_strength = 0.0
shader_param/wind_horizontal_direction = Vector2( 0.2, 0.4 )
shader_param/color_ramp = SubResource( 68 )
shader_param/wind_noise = SubResource( 66 )
